>2024.4.14: 
    >>1.开启应用后台运行功能选项;
    >>2.开启signal允许使用kill关闭后台应用功能选项;
    >>3.开启nuttxshell 命令行光标可移动功能选项;
    >>4.添加板级usart2、usart3的配置;
    >>5.在测试应用myled_main.c中添加usart2文件操作，并在子线程中进行串口打印功能，串口配置添加测试通过;
    >>>author：zeki
>2024.4.24: 
    >>1.配置LTDC外设板级引脚（包括RGB数据引脚，控制引脚）;
    >>2.配置LTDC显存地址、显存大小;
    >>3.配置LTDC时钟系数;
    >>4.开启FCM模块，编译通过;
    >>>author：zeki
>2024.4.27: 
    >>1.添加SDRAM测试APP：Test;
    >>2.测试SDRAM驱动，成功读写外置ram空间，测试通过;
    >>>author：zeki
>2024.4.29: 
    >>1.根据屏幕参数配置DMA2D选项，编译通过;
    >>2.添加framebuffer overlay test应用，测试屏幕RGB显示功能，Red色显示测试未通过，其余测试通过;
    >>>author：zeki
>2024.5.1: 
    >>1.修复Red色IO引脚配置问题，测试屏幕RGB显示功能通过;
    >>2.测试屏幕指定区域显示RGB块功能通过;
    >>>author：zeki
>2024.5.4: 
    >>1.开启回溯终端历史命令功能;
    >>2.开启ctrl-c中断应用功能;
    >>>author：zeki
>2024.5.12: 
    >>1.配置nx图形服务器选项;
    >>2.配置nxterm程序依赖项;
    >>>author：zeki
>2024.5.21: 
    >>1.定位并解决app无限占用cpu运行导致nx服务器无法响应的问题;
    >>2.调试成功启用运行nx服务器守护进程;
    >>3.调试成功运行nxhello程序;
    >>>author：zeki
>2024.5.22: 
    >>1.调试成功启动运行nxterm程序，但字符数量显示受限，且字符有误;
    >>>author：zeki
>2024.5.26:
    >>1.关闭CONFIG_NSH_CLE选项，测试lcd nxterm输出显示正常;
    >>2.输入仅在连续输入两次同字符才会被记录，猜测输入字符同时被PC端终端和lcd终端使用;
    >>>author：zeki
>2024.5.29:
    >>1.通过关闭终端的shell可以解决输入字符分流的问题，后续可在nxterm app中执行终端命令干掉原shell;
    >>2.lcd允许显示的字符数量受限，后续需要扩充缓冲区大小，或者设置环形缓冲区;
    >>>author：zeki
>2024.6.2:
    >>1.开启code中调用system的支持项，并在nxterm app开启lcd终端后调用此接口关闭PC终端;
    >>2.lcd允许显示的字符数量受限，将字符缓冲区改造为环形缓冲区，解决因缓冲区过小导致显示字符限制的问题;
    >>3.客户端消息队列会满导致nxterm 无法发送请求，待解决;
    >>>author：zeki
>2024.6.10:
    >>1.清除当前工程编译警告;
    >>2.构建GT9x触摸芯片设备目录;
    >>3.构建模拟I2C驱动目录;
    >>4.搁置nxterm应用调试，于支持键盘直接输入后再做调试;
    >>>author：zeki
>2024.6.16:
    >>1.调试开发板硬件IIC与触控芯片硬件驱动;
    >>2.添加配置触控芯片复位引脚和中断引脚;
    >>3.nuttx下调用i2c tool可检测到触控芯片，但无法读取数据;
    >>>author：zeki
>2024.7.1:
    >>1.使用逻辑分析仪(好贵)解析I2c报文，触控芯片没有响应I2c主站的请求；
    >>2.为提高调试可控性，增加myI2C应用，打开设备成功，后续在应用中尝试发送不同的控制命令；
>>>author：zeki
>2024.7.9:
    >>1.在设备驱动中移植模拟I2C接口；
    >>2.在myI2C应用中使用文件操作函数调用模拟I2C接口，成功读取芯片型号；
    >>3.基于当前驱动考虑两个进展方向：
        1、使用当前I2c接口实现上层触摸屏驱动；
        2、在当前已调通硬件驱动的前提下分析nuttx的硬件I2C驱动实现方式。
    >>>author：zeki
>2024.7.13:
    >>1.nuttx硬件I2C写操作调试成功。
    >>>author：zeki
>2024.7.14:
    >>1.nuttx硬件I2C读操作调试成功,成功读取触控芯片型号；
    >>2.支持在应用层使用文件操作函数调用硬件I2C接口的数据传输。
    >>>author：zeki
>2024.7.21:
    >>1.移植触控芯片坐标读取函数，实现对屏幕按压操作坐标实时读取。
    >>>author：zeki
>2024.7.24:
    >>1.裸机程序实现根据外部中断进行触摸屏坐标读取；
    >>2.测试nuttx中的外部中断触发机制，对中断引脚配置后可通过外部信号触发进入中断。
    >>>author：zeki
>2024.7.28:
    >>1.移植触控芯片驱动，将芯片通用操作从应用层迁移至驱动层；
    >>2.编写应用程序，在应用层使用文件操作调用触控芯片驱动，成功读取芯片信息。
    >>>author：zeki
>2024.7.30:
    >>1.在应用程序中使用poll机制实现仅在触发外部中断后进行触控芯片点位信息读取。
    >>>author：zeki
>2024.8.7:
    >>1.纠正触控芯片中断和复位引脚配置，使能外部中断，在触碰LCD屏幕时触发中断；
    >>2.在APP层调用触控芯片坐标点位驱动，实现在触碰LCD屏幕后串口输出坐标点位。
    >>>author：zeki
>2024.8.12:
    >>1.移植sdio驱动，移植mmc驱动，编译通过。
    >>>author：zeki
>2024.8.18:
    >>1.配置块设备驱动，适配V2 SD卡驱动，可成功检测到SD卡。
    >>2.应用层编写SD卡驱动，可成功打开SD卡文件符，可基于SDIO外设使用文件操作对SD卡进行无文件系统下的数据读写。
    >>>author：zeki
>2024.8.20:
    >>1.当天命人。
    >>>author：zeki
>2024.8.26:
    >>1.应用层使用write文件操作会同时调用read,Debug得知Nuttx标准write操作符只可控制字符设备，
    需要另外找应用层调用块设备的方法。
    >>>author：zeki
>2024.8.28:
    >>1.从其他应用程序中获取open_blockdriver接口，该接口直接通过文件路径找到块设备节点的文件操作回调函数；
    >>2.使用回调函数中的write和read接口，读写测试通过，初步验证SDIO驱动对mmc直接读写功能正常。
    >>>author：zeki
>2024.9.1:
    >>1.开启Vfat文件系统功能，开启mount应用，编译通过；
    >>2.调用Vfat bind回调时，报错EINVAL，待解决。
    >>>author：zeki
>2024.9.7:
    >>1.调试mount应用，成功挂载SD的fatfs至本地文件系统；
    >>2.实现通过文件系统对SD卡进行文件的创建、写、读功能。
    >>>author：zeki
>2024.9.17:
    >>1.开启ELF文件支持后应用程序会容易栈溢出？无法通过更改Makefile中STACKSIZE值增加栈空间。
    >>>author：zeki
>2024.9.18:
    >>1.修复栈空间溢出问题
    >>>author：zeki
>2024.10.7:
    >>1.新建贪吃蛇游戏应用，移植贪吃蛇游戏逻辑代码，编译通过;
    >>2.调测游戏屏幕显示驱动调用，调测屏幕触摸驱动调用，基本功能正常。
    >>>author：zeki
>2024.12.8:
    >>1.调用nx_fill接口，实现在nx窗口显示自定义色块
    >>>author：zeki
>2024.12.15:
    >>1.传递显示窗口句柄至Snake游戏逻辑中，在游戏逻辑中直接操作显示变化
    >>>author：zeki
>2024.12.22:
    >>1.设计贪吃蛇UI，设计显示逻辑；
    >>2.设计方向控制逻辑。
    >>>author：zeki
>2024.12.25:
    >>1.优化UI布局；
    >>2.实现蛇死亡机制以及相关显示逻辑。
    >>>author：zeki